--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=10 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 9.1SP2 cbx_cycloneii 2010:03:24:20:43:43:SJ cbx_lpm_add_sub 2010:03:24:20:43:43:SJ cbx_lpm_compare 2010:03:24:20:43:43:SJ cbx_lpm_decode 2010:03:24:20:43:43:SJ cbx_mgl 2010:03:24:21:01:05:SJ cbx_stratix 2010:03:24:20:43:43:SJ cbx_stratixii 2010:03:24:20:43:43:SJ  VERSION_END


-- Copyright (C) 1991-2010 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_5ua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode113w[1..0]	: WIRE;
	w_anode122w[3..0]	: WIRE;
	w_anode139w[3..0]	: WIRE;
	w_anode149w[3..0]	: WIRE;
	w_anode159w[3..0]	: WIRE;
	w_anode169w[3..0]	: WIRE;
	w_anode179w[3..0]	: WIRE;
	w_anode189w[3..0]	: WIRE;
	w_anode199w[3..0]	: WIRE;
	w_anode211w[1..0]	: WIRE;
	w_anode218w[3..0]	: WIRE;
	w_anode229w[3..0]	: WIRE;
	w_anode239w[3..0]	: WIRE;
	w_anode249w[3..0]	: WIRE;
	w_anode259w[3..0]	: WIRE;
	w_anode269w[3..0]	: WIRE;
	w_anode279w[3..0]	: WIRE;
	w_anode289w[3..0]	: WIRE;
	w_data111w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[9..0] = eq_wire[9..0];
	eq_wire[] = ( ( w_anode289w[3..3], w_anode279w[3..3], w_anode269w[3..3], w_anode259w[3..3], w_anode249w[3..3], w_anode239w[3..3], w_anode229w[3..3], w_anode218w[3..3]), ( w_anode199w[3..3], w_anode189w[3..3], w_anode179w[3..3], w_anode169w[3..3], w_anode159w[3..3], w_anode149w[3..3], w_anode139w[3..3], w_anode122w[3..3]));
	w_anode113w[] = ( (w_anode113w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode122w[] = ( (w_anode122w[2..2] & (! w_data111w[2..2])), (w_anode122w[1..1] & (! w_data111w[1..1])), (w_anode122w[0..0] & (! w_data111w[0..0])), w_anode113w[1..1]);
	w_anode139w[] = ( (w_anode139w[2..2] & (! w_data111w[2..2])), (w_anode139w[1..1] & (! w_data111w[1..1])), (w_anode139w[0..0] & w_data111w[0..0]), w_anode113w[1..1]);
	w_anode149w[] = ( (w_anode149w[2..2] & (! w_data111w[2..2])), (w_anode149w[1..1] & w_data111w[1..1]), (w_anode149w[0..0] & (! w_data111w[0..0])), w_anode113w[1..1]);
	w_anode159w[] = ( (w_anode159w[2..2] & (! w_data111w[2..2])), (w_anode159w[1..1] & w_data111w[1..1]), (w_anode159w[0..0] & w_data111w[0..0]), w_anode113w[1..1]);
	w_anode169w[] = ( (w_anode169w[2..2] & w_data111w[2..2]), (w_anode169w[1..1] & (! w_data111w[1..1])), (w_anode169w[0..0] & (! w_data111w[0..0])), w_anode113w[1..1]);
	w_anode179w[] = ( (w_anode179w[2..2] & w_data111w[2..2]), (w_anode179w[1..1] & (! w_data111w[1..1])), (w_anode179w[0..0] & w_data111w[0..0]), w_anode113w[1..1]);
	w_anode189w[] = ( (w_anode189w[2..2] & w_data111w[2..2]), (w_anode189w[1..1] & w_data111w[1..1]), (w_anode189w[0..0] & (! w_data111w[0..0])), w_anode113w[1..1]);
	w_anode199w[] = ( (w_anode199w[2..2] & w_data111w[2..2]), (w_anode199w[1..1] & w_data111w[1..1]), (w_anode199w[0..0] & w_data111w[0..0]), w_anode113w[1..1]);
	w_anode211w[] = ( (w_anode211w[0..0] & data_wire[3..3]), enable_wire);
	w_anode218w[] = ( (w_anode218w[2..2] & (! w_data111w[2..2])), (w_anode218w[1..1] & (! w_data111w[1..1])), (w_anode218w[0..0] & (! w_data111w[0..0])), w_anode211w[1..1]);
	w_anode229w[] = ( (w_anode229w[2..2] & (! w_data111w[2..2])), (w_anode229w[1..1] & (! w_data111w[1..1])), (w_anode229w[0..0] & w_data111w[0..0]), w_anode211w[1..1]);
	w_anode239w[] = ( (w_anode239w[2..2] & (! w_data111w[2..2])), (w_anode239w[1..1] & w_data111w[1..1]), (w_anode239w[0..0] & (! w_data111w[0..0])), w_anode211w[1..1]);
	w_anode249w[] = ( (w_anode249w[2..2] & (! w_data111w[2..2])), (w_anode249w[1..1] & w_data111w[1..1]), (w_anode249w[0..0] & w_data111w[0..0]), w_anode211w[1..1]);
	w_anode259w[] = ( (w_anode259w[2..2] & w_data111w[2..2]), (w_anode259w[1..1] & (! w_data111w[1..1])), (w_anode259w[0..0] & (! w_data111w[0..0])), w_anode211w[1..1]);
	w_anode269w[] = ( (w_anode269w[2..2] & w_data111w[2..2]), (w_anode269w[1..1] & (! w_data111w[1..1])), (w_anode269w[0..0] & w_data111w[0..0]), w_anode211w[1..1]);
	w_anode279w[] = ( (w_anode279w[2..2] & w_data111w[2..2]), (w_anode279w[1..1] & w_data111w[1..1]), (w_anode279w[0..0] & (! w_data111w[0..0])), w_anode211w[1..1]);
	w_anode289w[] = ( (w_anode289w[2..2] & w_data111w[2..2]), (w_anode289w[1..1] & w_data111w[1..1]), (w_anode289w[0..0] & w_data111w[0..0]), w_anode211w[1..1]);
	w_data111w[2..0] = data_wire[2..0];
END;
--VALID FILE
